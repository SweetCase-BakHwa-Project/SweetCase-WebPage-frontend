[{"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\index.tsx":"1","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\App.tsx":"2","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\SweetCase.tsx":"3","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\Home.tsx":"4","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\BakhwaProject.tsx":"5","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\footer.tsx":"6","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Navbar.tsx":"7","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\AlbumPage.tsx":"8","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\MusicSheetsPage.tsx":"9","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Album.tsx":"10","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\AlbumInfoPage.tsx":"11","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Sheet.tsx":"12","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\TrackSong.tsx":"13"},{"size":123,"mtime":1609640474480,"results":"14","hashOfConfig":"15"},{"size":1147,"mtime":1609914050211,"results":"16","hashOfConfig":"15"},{"size":1521,"mtime":1609872149351,"results":"17","hashOfConfig":"15"},{"size":7106,"mtime":1610029064327,"results":"18","hashOfConfig":"15"},{"size":2215,"mtime":1610029062372,"results":"19","hashOfConfig":"15"},{"size":1879,"mtime":1609914557030,"results":"20","hashOfConfig":"15"},{"size":1547,"mtime":1609913959668,"results":"21","hashOfConfig":"15"},{"size":4374,"mtime":1610040606317,"results":"22","hashOfConfig":"15"},{"size":3199,"mtime":1610041270423,"results":"23","hashOfConfig":"15"},{"size":1824,"mtime":1609878679128,"results":"24","hashOfConfig":"15"},{"size":8368,"mtime":1610037815231,"results":"25","hashOfConfig":"15"},{"size":1146,"mtime":1610041386787,"results":"26","hashOfConfig":"15"},{"size":2311,"mtime":1610041401235,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"94d1v5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\index.tsx",[],["58","59"],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\App.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\SweetCase.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\Home.tsx",["60"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport TitleImg from '../img/all_logo.png';\r\nimport SweetLogo from '../img/sweetcase-img.gif';\r\nimport BakhwaLogo from '../img/bakhwaproject-img.gif';\r\n\r\nimport Footer from '../components/footer';\r\n\r\nimport '../fonts/fonts.css'\r\n\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    // SweetCase state section\r\n    const [ sweetcaseButtonBackgroundColor, setSweetcaseButtonBackgroundColor ] = useState('white');\r\n    const [ sweetcaseButtonFontColor, setSweetcaseButtonFontColor ] = useState('#0E6AC7');\r\n\r\n    const [ isSweetcaseDisplayed, setIsSweetcaseDisplayed ] = useState('block');\r\n\r\n    // BakhwaProject state section\r\n    const [ bakhwaButtonBackgroundColor, setBackhwaButtonBackgroundColor] = useState(\"white\");\r\n    const [ bakhwaButtonFontColor, setBakhwaButtonFontColor ] = useState('#0E6AC7');\r\n\r\n    const [ isBakhwaDisplayed, setIsBakhwaDisplayed ] = useState('none');\r\n    \r\n\r\n    // Display Layer State\r\n    const [ displayImg, setDisplayImg ] = useState(SweetLogo);\r\n\r\n    // CSS Components (Basic)\r\n    const Main = styled.div`\r\n        width: 100%;\r\n        height: 100%;\r\n    `\r\n\r\n    const Line = styled.div`\r\n        margin: 10px;\r\n        width: 99%;\r\n        height: 2px;\r\n        background-color: #0E6AC7\r\n    `\r\n\r\n    const Title  = styled.div`\r\n        width: 400px;\r\n        left: 100px;\r\n        margin: 0 auto;\r\n        padding-top: 20px;\r\n    `\r\n    const MainSection = styled.div`\r\n        margin-top: 10px;\r\n        margin-bottom: 50px;\r\n    `\r\n    const ButtonLayer = styled.div`\r\n        margin-top: 30px;\r\n        margin-left: 100px;\r\n        margin-right: 100px;\r\n\r\n        `\r\n    const SweetCaseButton = styled.div`\r\n        float: left;\r\n        width: 49%;\r\n        text-align: center;\r\n        background-color: ${sweetcaseButtonBackgroundColor};\r\n        color: ${sweetcaseButtonFontColor};\r\n        font-size: 30pt;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        margin-right: 10px;\r\n        font-family: \"Android_101\";\r\n        cursor: pointer;\r\n        box-shadow: 5px 8px 8px #000000;\r\n\r\n        margin-bottom: 30px;\r\n    `\r\n    const BakhwaProjectButton = styled.div`\r\n        float: left;\r\n        width: 49%;\r\n        text-align: center;\r\n        background-color: ${bakhwaButtonBackgroundColor};\r\n        color: ${bakhwaButtonFontColor};\r\n        font-size: 30pt;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        margin-left: 10px;\r\n        font-family: 'Nanum Myeongjo', serif;\r\n        cursor: pointer;\r\n        box-shadow: 5px 8px 8px #000000;\r\n\r\n        margin-bottom: 30px;\r\n    `\r\n\r\n    // Display Container\r\n    const DisplayLayer = styled.div`\r\n        clear: both;\r\n\r\n        height: 470px;\r\n        width: auto;\r\n        \r\n        margin-left: 100px;\r\n        margin-right: 100px;\r\n\r\n        box-shadow: 5px 8px 8px  #0E6AC7;\r\n    `\r\n\r\n    const BakhwaProjectDisplayLayer = styled.div`\r\n        font-family: 'Nanum Myeongjo', serif;\r\n        background-color: white;\r\n        display: ${isBakhwaDisplayed};\r\n    `\r\n    const SweetcaseDisplayLayer = styled.div`\r\n        background-color: white;\r\n        font-family: \"Android_101\";\r\n        display: ${isSweetcaseDisplayed};\r\n    `\r\n    const SectionImg = styled.img`\r\n        float: left;\r\n        width: 500px;\r\n    `\r\n    // In Summary\r\n    const SectionTextLayer = styled.div`\r\n        float: left;\r\n    `\r\n    const ProjectTitle = styled.p`\r\n        font-size: 50px;\r\n        text-aligh: right;\r\n    `\r\n    const SinceText = styled.p`\r\n        margin-top: -30px;\r\n    `\r\n    const ProjectSummary = styled.div`\r\n        font-size: 25px;\r\n        margin-top: 100px;\r\n    `\r\n\r\n    // Events\r\n    /* Mouse Events in Button */\r\n    const sweetCaseButtonMouseEnterEvent = () => {\r\n\r\n        setSweetcaseButtonBackgroundColor('#0E6AC7');\r\n        setSweetcaseButtonFontColor('white');\r\n        setDisplayImg(SweetLogo);\r\n        bakhwaButtonMouseLeaveEvent();\r\n\r\n        setIsSweetcaseDisplayed('block');\r\n        setIsBakhwaDisplayed('none');\r\n\r\n    }\r\n    const  sweetCaseButtonMouseLeaveEvent = () => {\r\n\r\n        setSweetcaseButtonBackgroundColor('white');\r\n        setSweetcaseButtonFontColor('#0E6AC7');\r\n    }\r\n    const bakhwaButtonMouseEnterEvent = () => {\r\n\r\n        setBackhwaButtonBackgroundColor('#0E6AC7');\r\n        setBakhwaButtonFontColor('white');\r\n        setDisplayImg(BakhwaLogo);\r\n        sweetCaseButtonMouseLeaveEvent();\r\n        \r\n        setIsSweetcaseDisplayed('none');\r\n        setIsBakhwaDisplayed('block');\r\n    }\r\n    const bakhwaButtonMouseLeaveEvent = () => {\r\n        setBackhwaButtonBackgroundColor('white');\r\n        setBakhwaButtonFontColor('#0E6AC7');\r\n    }\r\n\r\n    return (\r\n        <Main>\r\n            <Helmet>\r\n                <title>SWEETCASE</title>\r\n            </Helmet>\r\n            <Title><img src={TitleImg} width=\"400\"/></Title>\r\n            <Line />\r\n            <MainSection>\r\n                <ButtonLayer>\r\n                    <Link to=\"/sweetcase\"><SweetCaseButton\r\n                        onMouseEnter={sweetCaseButtonMouseEnterEvent}\r\n                        onMouseLeave={sweetCaseButtonMouseLeaveEvent} \r\n                        >\r\n                        SweetCase\r\n                    </SweetCaseButton></Link>\r\n                    <Link to=\"/bakhwaproject\"><BakhwaProjectButton\r\n                        onMouseEnter={bakhwaButtonMouseEnterEvent}\r\n                        onMouseLeave={bakhwaButtonMouseLeaveEvent} >\r\n                        白花 PROJECT\r\n                    </BakhwaProjectButton></Link>\r\n                </ButtonLayer>\r\n                <DisplayLayer>\r\n\r\n                    <SweetcaseDisplayLayer>\r\n                        <SectionImg src={displayImg} />\r\n                        <SectionTextLayer>\r\n                            <ProjectTitle>SweetCase Project</ProjectTitle>\r\n                            <SinceText>since 2019</SinceText>\r\n                            <ProjectSummary>\r\n                                <p>SOFTWARE PROJECT</p>\r\n                                <p>ANDROID/DOCKER-PACKAGE/WEB-APP/IOT</p>\r\n                            </ProjectSummary>\r\n                        </SectionTextLayer>\r\n                    </SweetcaseDisplayLayer>\r\n\r\n                    <BakhwaProjectDisplayLayer>\r\n                        <SectionImg src={displayImg} />\r\n                        <SectionTextLayer>\r\n                            <ProjectTitle>白花 PROJECT</ProjectTitle>\r\n                            <SinceText>since 2015</SinceText>\r\n                            <ProjectSummary>\r\n                                <p>PURE MUSIC PROJECT</p>\r\n                                <p>CLASSIC/PIANO-ETUDE/NEW-AGE</p>\r\n                            </ProjectSummary>\r\n                        </SectionTextLayer>\r\n                    </BakhwaProjectDisplayLayer>\r\n\r\n                </DisplayLayer>\r\n            </MainSection>\r\n            <Footer backgroundcolor=\"#0E6AC7\" />\r\n        </Main>\r\n    );\r\n    \r\n}\r\n\r\nexport default Home;","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\BakhwaProject.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\footer.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Navbar.tsx",["61"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst NavTitle = styled.div`\r\n    color: white;\r\n    font-size: 25px;\r\n`\r\nconst Navbar: React.FC<{\r\n    album: string,\r\n    musicSheet: string\r\n}> = ({\r\n    album,\r\n    musicSheet\r\n}) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/bakhwaproject\"><NavTitle>白化 Project</NavTitle></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <a className={album} href=\"/bakhwaproject/albums\">Albums</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className={musicSheet} href=\"/bakhwaproject/musicsheets\">MusicSheets</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\AlbumPage.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\MusicSheetsPage.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Album.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\pages\\bakhwa\\AlbumInfoPage.tsx",["62","63"],"import Helmet from 'react-helmet';\r\nimport styled from 'styled-components';\r\n\r\n\r\nimport React, {useState} from 'react';\r\nimport { generatePath, RouteComponentProps } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../../components/bakhwa/Navbar\";\r\nimport Footer from '../../components/footer';\r\nimport TrackSong from \"../../components/bakhwa/TrackSong\";\r\n\r\nimport Wallpaper from \"../../img/bakhwa-wallpaper.jpg\";\r\nimport axios from 'axios';\r\n\r\nimport HostData from \"../../config.json\";\r\n\r\ninterface AlbumInfoInterface  {\r\n    albumName: string;\r\n}\r\nclass ComponentAlbumInfo {\r\n    name:               string;\r\n    cover:              string;\r\n    downloadLink:       string;\r\n    soundCloudLink:     string;\r\n    createDate:         string;\r\n    type:               string;\r\n    genre:              string;\r\n    songListComponent: JSX.Element[];\r\n\r\n    constructor(name:       string, \r\n            cover:          string,\r\n            downloadLink:   string, \r\n            soundCloudLink: string,\r\n            createDate:     string,\r\n            type:           string,\r\n            genre:          string,\r\n            songListComponent: JSX.Element[]) {\r\n\r\n        this.name               = name;\r\n        this.downloadLink       = downloadLink;\r\n        this.soundCloudLink     = soundCloudLink;\r\n        this.songListComponent  = songListComponent;\r\n        this.createDate         = createDate;\r\n        this.type               = type;\r\n        this.genre              = genre;\r\n        this.cover              = cover;\r\n    }\r\n}\r\nclass ComponentAlbumInfoBuilder {\r\n    name:               string;\r\n    cover:              string;\r\n    downloadLink:       string;\r\n    soundCloudLink:     string;\r\n    createDate:         string;\r\n    type:               string;\r\n    genre:              string;\r\n    songListComponent: JSX.Element[];\r\n    \r\n    constructor() {\r\n        this.name               = \"\";\r\n        this.cover              = \"\";\r\n        this.downloadLink       = \"\";\r\n        this.soundCloudLink     = \"\";\r\n        this.createDate         = \"\";\r\n        this.type               = \"\";\r\n        this.genre              = \"\";\r\n        this.songListComponent  = []\r\n    }\r\n    \r\n    setName(name: string): ComponentAlbumInfoBuilder                        { this.name = name; return this; };\r\n    setCover(cover: string): ComponentAlbumInfoBuilder                      { this.cover = cover; return this; };\r\n    setDownloadLink(downloadLink: string): ComponentAlbumInfoBuilder        { this.downloadLink = downloadLink; return this; };\r\n    setSoundCloudLink(soundCloudLink: string): ComponentAlbumInfoBuilder    { this.soundCloudLink = soundCloudLink; return this; };\r\n    setCreateDate(createDate: string): ComponentAlbumInfoBuilder            { this.createDate = createDate; return this; }\r\n    setType(type: string): ComponentAlbumInfoBuilder                        { this.type = type; return this; }\r\n    setGenre(genre: string): ComponentAlbumInfoBuilder                       { this.genre = genre; return this; }\r\n    setSongListComponent(songListComponent: JSX.Element[]): ComponentAlbumInfoBuilder  { this.songListComponent = songListComponent; return this; }; \r\n\r\n    build() { \r\n        return new ComponentAlbumInfo(\r\n            this.name,\r\n            this.cover,\r\n            this.downloadLink,\r\n            this.soundCloudLink,\r\n            this.createDate,\r\n            this.type,\r\n            this.genre,\r\n            this.songListComponent\r\n        )\r\n    }\r\n\r\n}\r\nconst AlbumInfoPage = ({ match }: RouteComponentProps<AlbumInfoInterface>) => {\r\n\r\n    var albumName = match.params.albumName;\r\n\r\n    const [albumInfo, setAlbumInfo] = useState<ComponentAlbumInfo>();\r\n\r\n    if(albumInfo === undefined) {\r\n        axios.post(HostData.bakhwaHost.host+HostData.bakhwaHost.api.get_album_info, {\r\n            \"album_name\": albumName\r\n        }).then(\r\n            data => {\r\n                var _albumInfo = data.data.data;\r\n                var songComponents: JSX.Element[] = [];\r\n\r\n                for(var i = 0; i < _albumInfo.song_list.length; i++) {\r\n                    songComponents.push(\r\n                        <TrackSong key={i} trackNumber={i+1} musicName={_albumInfo.song_list[i].name} musicUrl={_albumInfo.song_list[i].link} />\r\n                    );\r\n                }\r\n                setAlbumInfo(new ComponentAlbumInfoBuilder()\r\n                                .setName(albumName)\r\n                                .setCover(_albumInfo.album_cover)\r\n                                .setDownloadLink(_albumInfo.album_download_link)\r\n                                .setSoundCloudLink(_albumInfo.soundcloud_link)\r\n                                .setSongListComponent(songComponents)\r\n                                .setCreateDate(_albumInfo.create_date)\r\n                                .setType(_albumInfo.album_type)\r\n                                .setGenre(_albumInfo.genre)\r\n                                .build()\r\n                                );\r\n                \r\n            }\r\n        ).catch(e => {\r\n            // Error\r\n            window.location.href = \"https://www.google.com\";\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <Main>\r\n            <Helmet>\r\n                <title>白花 Project-Albums</title>\r\n            </Helmet>\r\n                <Navbar \r\n                    album=\"nav-link active\"\r\n                    musicSheet=\"nav-link\"\r\n                />\r\n            <Body>\r\n                <SummaryLayer>\r\n                    <SummaryImgLayer src={albumInfo?.cover} />\r\n                    <SummaryTextLayer>\r\n                        <Summary>\r\n                            <h2>{albumName}</h2>\r\n                            <p>Create Date: {albumInfo?.createDate}</p>\r\n                            <p>Ganre: {albumInfo?.genre}</p>\r\n                            <p>Type: {albumInfo?.type}</p>\r\n                        </Summary>\r\n                        <ButtonLayer>\r\n                            <Btn><button className=\"btn btn-primary\" onClick={() =>{\r\n                                if(albumInfo !== undefined) {\r\n                                    window.open(\r\n                                        albumInfo.downloadLink,\r\n                                        \"_blank\"\r\n                                    );\r\n                                }\r\n                            }} >Download</button></Btn>\r\n                            <Btn><button className=\"btn btn-warning\" onClick={() => {\r\n                                if(albumInfo !== undefined) {\r\n                                    window.open(\r\n                                        albumInfo.soundCloudLink,\r\n                                        \"_blank\"\r\n                                    );\r\n                                }\r\n                            }}>Soundcloud</button></Btn>\r\n                        </ButtonLayer>\r\n                    </SummaryTextLayer>\r\n                </SummaryLayer>\r\n                <MainLine />\r\n                <TrackList>\r\n                    <h2>Track List</h2>\r\n                    {albumInfo?.songListComponent}\r\n                </TrackList>\r\n            </Body>\r\n            <Footer backgroundcolor=\"#000000\" />\r\n        </Main>\r\n    );\r\n}\r\nconst Main = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\nfont-family: 'Nanum Myeongjo', serif;\r\nbackground-image: url(${Wallpaper});\r\n`\r\nconst Body = styled.div`\r\nmargin-top: 3%;\r\nwidth: auto;\r\nheight: auto;\r\noverflow: hidden;\r\nbackground-color: rgba(255, 255, 255, 0.7);\r\nmargin-left: 15%;\r\nmargin-right: 15%;\r\npadding-left: 1%;\r\n`\r\nconst SummaryLayer = styled.div`\r\n    width: 100%;\r\n    height: auto;\r\n`\r\nconst MainLine = styled.div`\r\n    clear: both;\r\n    width: 95%;\r\n    height: 2px;\r\n    background-color: black;\r\n    margin-bottom: 10px;\r\n`\r\nconst SummaryImgLayer = styled.img`\r\nwidth: 30%;\r\nmargin-bottom: 2%;\r\nmargin-left: 2%;\r\nmargin-right: 2%;\r\nfloat: left;\r\n`\r\nconst SummaryTextLayer = styled.div`\r\n    padding-top: 2%;\r\n    width 100%;\r\n    height: auto;\r\n    margin-top: 2%;\r\n    margin-right: 1%;\r\n`\r\nconst Summary = styled.div`\r\n    position: alsolute;\r\n    top: 0;\r\n`\r\nconst ButtonLayer = styled.div`\r\n    width: 100%;\r\n`\r\nconst Btn = styled.div`\r\n    margin-right: 10px;\r\n    float: left;\r\n`\r\n\r\nconst TrackList = styled.div`\r\n    margin-left: 2%;\r\n`\r\nconst TrackListLi = styled.div`\r\n`\r\nexport default AlbumInfoPage;","D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\Sheet.tsx",[],"D:\\projects\\SweetCase-WebPage-frontend\\app\\src\\components\\bakhwa\\TrackSong.tsx",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":176,"column":20,"nodeType":"71","endLine":176,"endColumn":53},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"72","severity":1,"message":"76","line":6,"column":10,"nodeType":"74","messageId":"75","endLine":6,"endColumn":22},{"ruleId":"72","severity":1,"message":"77","line":236,"column":7,"nodeType":"74","messageId":"75","endLine":236,"endColumn":18},{"ruleId":"72","severity":1,"message":"78","line":79,"column":7,"nodeType":"74","messageId":"75","endLine":79,"endColumn":17},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'generatePath' is defined but never used.","'TrackListLi' is assigned a value but never used.","'MusicLayer' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]